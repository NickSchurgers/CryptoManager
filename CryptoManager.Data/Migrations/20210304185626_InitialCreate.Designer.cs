// <auto-generated />
using System;
using CryptoManager.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CryptoManager.Data.Migrations
{
    [DbContext(typeof(CryptoManagerDBContext))]
    [Migration("20210304185626_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("CryptoManager.Data.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("CryptoManager.Data.Models.Asset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("CryptoManager.Data.Models.Portfolio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Strategy")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Portfolios");
                });

            modelBuilder.Entity("CryptoManager.Data.Models.PortfolioAsset", b =>
                {
                    b.Property<Guid>("PortfolioId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AssetId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("PortfolioId", "AssetId");

                    b.HasIndex("AssetId");

                    b.ToTable("PortfolioAsset");
                });

            modelBuilder.Entity("CryptoManager.Data.Models.Portfolio", b =>
                {
                    b.HasOne("CryptoManager.Data.Models.Account", "Account")
                        .WithMany("Portfolios")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("CryptoManager.Data.Models.PortfolioAsset", b =>
                {
                    b.HasOne("CryptoManager.Data.Models.Asset", "Asset")
                        .WithMany("PortfolioAssets")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CryptoManager.Data.Models.Portfolio", "Portfolio")
                        .WithMany("PortfolioAssets")
                        .HasForeignKey("PortfolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");

                    b.Navigation("Portfolio");
                });

            modelBuilder.Entity("CryptoManager.Data.Models.Account", b =>
                {
                    b.Navigation("Portfolios");
                });

            modelBuilder.Entity("CryptoManager.Data.Models.Asset", b =>
                {
                    b.Navigation("PortfolioAssets");
                });

            modelBuilder.Entity("CryptoManager.Data.Models.Portfolio", b =>
                {
                    b.Navigation("PortfolioAssets");
                });
#pragma warning restore 612, 618
        }
    }
}
